
5-三項演算子でページを切り替える

課題作成画面と課題編集画面の表示内容や遷移先を
三項演算子で切り替える

◆テンプレートの編集◆

ディレクトリ
src/main/resources/templates/tasks/form.html

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

<title th:text="${mode == 'CREATE'} ? 'タスク作成' : 'タスク編集'"></title>

        <form th:action="${mode == 'CREATE'} ? @{/tasks} : @{/tasks/{id}(id=${id})}"
              th:method="${mode == 'CREATE'} ? post : put"
              th:object="${taskForm}">


            <div class="mt-3">
                <button type="submit" class="btn btn-primary" th:text="${mode == 'CREATE'} ? '作成' : '編集'"></button>
                <a th:href="${mode == 'CREATE'} ? @{/tasks} : @{/tasks/{id}(id=${id})}" class="btn btn-secondary">戻る</a>
            </div>

★コード解説★
mode == 'CREATE'がtrueの場合、課題作成画面、falseの場合は、課題編集画面に
遷移する

PUT: 既存リソースを「置き換える」ために使われる。



/////////////////////////////////////////////////////////////////////////////////////////////////

◆コントローラーの編集◆

ディレクトリ
src/main/java/com/example/todo/controller/task/TaskController.java

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

    // 新規画面
    @GetMapping("/creationForm")
    public String showCreationForm(@ModelAttribute TaskForm form, Model model) {
        model.addAttribute("mode", "CREATE");
        return "tasks/form";
    }

    @PostMapping

        public String create(@Validated TaskForm form, BindingResult bindingResult, Model model) {
            if (bindingResult.hasErrors()) {
                return showCreationForm(form, model);
            }

    // 編集画面
    @GetMapping("/{id}/editForm")
    public String showEditForm(@PathVariable("id") long id, Model model) {

        var form = taskService.findById(id)
                .map(TaskForm::fromEntity)
                .orElseThrow(TaskNotFoundException::new);

        model.addAttribute("mode", "EDIT");

★コード解説★
tasks/form.htmlで記載した
"${mode == 'CREATE'} ? 'タスク作成' : 'タスク編集'"で
どちらかのページに遷移するようになる

/////////////////////////////////////////////////////////////////////////////////////////////////